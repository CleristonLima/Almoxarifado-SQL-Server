------ ALMOXARIFADO ------------

Use DB_ALMOXARIFADO
--------------------- Login ---------------------------------------------------------------------------------

CREATE TABLE [dbo].[TB_AD_LOGIN](
	[ID_LOGIN] [int] NOT NULL,
	[NAME_PEOPLE] [nvarchar](50) NOT NULL,
	[LOGIN_NAME] [nvarchar](15) NOT NULL,
	[PASSWORD_LOGIN] [nvarchar](30) NOT NULL,
	[EMAIL] [nvarchar](100) NOT NULL,
	[BLOCK_USER] [bit] NOT NULL,
	[ID_PROFILE] [int] NOT NULL,
	[USER_INSERT] [nvarchar](15) NOT NULL,
	[DATE_INSERT] [datetime] NOT NULL,
	[USER_UPDATE] [nvarchar](15) NULL,
	[DATE_UPDATE] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID_LOGIN] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[LOGIN_NAME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[TB_AD_LOGIN]  WITH CHECK ADD  CONSTRAINT [ID_PROFILE_FK] FOREIGN KEY([ID_PROFILE])
REFERENCES [dbo].[TB_AD_PROFILE] ([ID_PROFILE])
GO

ALTER TABLE [dbo].[TB_AD_LOGIN] CHECK CONSTRAINT [ID_PROFILE_FK]
GO

ALTER TABLE TB_AD_LOGIN ADD CONSTRAINT UQ_LOGIN_NAME UNIQUE (LOGIN_NAME);

CREATE TABLE [dbo].[TB_AD_PROFILE](
	[ID_PROFILE] [int] NOT NULL,
	[NAME_PROFILE] [nvarchar](50) NOT NULL,
	[CODE_PROFILE] [nvarchar](10) NOT NULL,
	[USER_INSERT] [nvarchar](15) NOT NULL,
	[DATA_INSERT] [datetime] NOT NULL,
	[USER_UPDATE] [nvarchar](15) NULL,
	[DATA_UPDATE] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID_PROFILE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[CODE_PROFILE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE TB_AD_PROFILE ADD CONSTRAINT UK_CODE_PROFILE UNIQUE (CODE_PROFILE);

EXEC sp_rename 'TB_AD_PROFILE.DATA_INSERT', 'DATE_INSERT', 'COLUMN';

EXEC sp_rename 'TB_AD_PROFILE.DATA_UPDATE', 'DATE_UPDATE', 'COLUMN';
------------------- DADOS PESSOAIS -----------------------------------------------------------------------------

CREATE TABLE TB_SEX_EMPLO (ID_SEX_EMPLO INT PRIMARY KEY NOT NULL,
						   CODE_SEX_EMPLO VARCHAR(1) NOT NULL,
						   DESC_SEX_EMPLO VARCHAR(15) NOT NULL);

INSERT INTO TB_SEX_EMPLO (ID_SEX_EMPLO, CODE_SEX_EMPLO, DESC_SEX_EMPLO) VALUES (1, 'M', 'Masculino'),
																			   (2, 'F', 'Feminino');

SELECT * FROM TB_SEX_EMPLO;

SELECT * FROM TB_UF;

CREATE TABLE TB_UF (ID_UF INT PRIMARY KEY NOT NULL,
					CODE_UF VARCHAR(2) NOT NULL,
					DESC_UF VARCHAR(30) NOT NULL);

INSERT INTO TB_UF (ID_UF, CODE_UF, DESC_UF) VALUES (1, 'AC', 'Acre'),
												   (2, 'AL', 'Alagoas'),
												   (3, 'AP', 'Amapá'),
												   (4, 'AM', 'Amazonas'),
												   (5, 'BA', 'Bahia'),
												   (6, 'CE', 'Ceará'),
												   (7, 'DF', 'Distrito Federal'),
												   (8, 'ES', 'Espirito Santo'),
												   (9, 'GO', 'Goias'),
												   (10, 'MA', 'Maranhão'),
												   (11, 'MT', 'Mato Grosso'),
												   (12, 'MS', 'Mato Grosso do Sul'),
												   (13, 'MG', 'Minas Gerais'),
												   (14, 'PA', 'Pará'),
												   (15, 'PB', 'Paraiba'),
												   (16, 'PR', 'Paraná'),
												   (17, 'PE', 'Pernambuco'),
												   (18, 'PI', 'Piaui'),
												   (19, 'RJ', 'Rio de Janeiro'),
												   (20, 'RN', 'Rio Grande do Norte'),
												   (21, 'RS', 'Rio Grande do Sul'),
												   (22, 'RO', 'Rondônia'),
												   (23, 'RR', 'Roraima'),
												   (24, 'SC', 'Santa Catarina'),
												   (25, 'SP', 'São Paulo'),
												   (26, 'SE', 'Sergipe'),
												   (27, 'TO', 'Tocantins');


------------------------- RH --------------------------------------------------------------------------

CREATE TABLE TB_HR_DEPARTMENTS(ID_DEPARTMENT INT PRIMARY NOT NULL,
							   CODE_DEPARTMENT VARCHAR(5) UNIQUE NOT NULL,
							   NAME_DEPARTMENT VARCHAR(100) NOT NULL,
							   USER_INSERT VARCHAR(50) NOT NULL,
							   DATE_INSERT DATETIME NOT NULL,
							   USER_UPDATE VARCHAR(50),
							   DATE_UPDATE DATETIME);

CREATE SEQUENCE SEQ_HR_DEPARTMENTS START WITH 100 INCREMENT BY 100;

ALTER TABLE TB_HR_DEPARTMENTS
ADD STATUS_DEPARTMENT BIT NOT NULL;

ALTER TABLE TB_HR_DEPARTMENTS
ADD CONSTRAINT UK_CODE_DEPARTMENT UNIQUE (CODE_DEPARTMENT);

CREATE TABLE TB_HR_OFFICE (ID_OFFICE INT PRIMARY KEY NOT NULL,
						   NAME_OFFICE VARCHAR(100) UNIQUE,
						   USER_INSERT VARCHAR(15) NOT NULL,
						   DATE_INSERT DATETIME NOT NULL,
						   USER_UPDATE VARCHAR(15),
						   DATE_UPDATE DATETIME);

CREATE SEQUENCE SEQ_HR_OFFICE START WITH 1 INCREMENT BY 1;

ALTER TABLE TB_HR_OFFICE
ADD STATUS_OFFICE BIT NOT NULL;

CREATE TABLE TB_HR_EDUCATION (ID_EDUCATION INT PRIMARY KEY NOT NULL,
							  NAME_EDUCATION VARCHAR(100));

INSERT INTO TB_HR_EDUCATION (ID_EDUCATION, NAME_EDUCATION)
					  VALUES(10, 'Ensino Fundamental I - Incompleto'),
							(20, 'Ensino Fundamental I - Completo'),
							(30, 'Ensino Fundamental II - Incompleto'),
							(40, 'Ensino Fundamental II - Completo'),
							(50, 'Ensino Médio - Incompleto'),
							(60, 'Ensino Médio - Completo'),
							(70, 'Ensino Superior - Incompleto'),
							(80, 'Ensino Superior - Completo'),
							(90, 'Pós-Graduação'),
							(100, 'Doutorado'),
							(110, 'Mestrado')


CREATE TABLE TB_HR_EMPLOYEES (ID_EMPLO INT PRIMARY KEY NOT NULL,
							  NAME_EMPLO VARCHAR(50) NOT NULL,
							  RG_RNE VARCHAR(15) NOT NULL,
							  CPF_CNPJ VARCHAR(20) UNIQUE NOT NULL,
							  BORN_DATE DATE NOT NULL,
							  ZIP_CODE VARCHAR(10) NOT NULL,
							  ADDRESS_EMPLO VARCHAR(100) NOT NULL,
							  NUMBER VARCHAR(5) NOT NULL,
							  COMPLEMENT VARCHAR(15),
							  DISTRICT VARCHAR(100) NOT NULL,
							  CITY VARCHAR(100) NOT NULL,
							  UF_ID INT NOT NULL,
							  ID_SEX_EMPLO INT NOT NULL,
							  ID_DEPARTMENT INT NOT NULL,
							  OFFICE VARCHAR(100) NOT NULL,
							  NAME_LEADER VARCHAR(100),
							  PHOTO VARBINARY(MAX),
							  USER_INSERT VARCHAR(50) NOT NULL,
							  DATE_INSERT DATETIME NOT NULL,
							  USER_UPDATE VARCHAR(50),
							  DATE_UPDATE DATETIME,
							  CONSTRAINT UF_ID_FK FOREIGN KEY (UF_ID) REFERENCES TB_UF (ID_UF),
							  CONSTRAINT ID_SEX_EMPLO_FK FOREIGN KEY (ID_SEX_EMPLO) REFERENCES TB_SEX_EMPLO (ID_SEX_EMPLO),
							  CONSTRAINT ID_DEPARTMENT_FK FOREIGN KEY (ID_DEPARTMENT) REFERENCES TB_HR_DEPARTMENTS (ID_DEPARTMENT));


CREATE SEQUENCE SEQ_HR_EMPLOYEES START WITH 1000 INCREMENT BY 1;

ALTER TABLE TB_HR_EMPLOYEES
DROP COLUMN OFFICE;

ALTER TABLE TB_HR_EMPLOYEES
ADD ID_OFFICE INT;

ALTER TABLE TB_HR_EMPLOYEES
ADD CONSTRAINT FK_ID_OFFICE
FOREIGN KEY (ID_OFFICE) -- Coluna que será a chave estrangeira
REFERENCES TB_HR_OFFICE (ID_OFFICE);

ALTER TABLE TB_HR_EMPLOYEES
ADD ID_EDUCATION INT;

ALTER TABLE TB_HR_EMPLOYEES
ADD CONSTRAINT FK_ID_EDUCATION
FOREIGN KEY (ID_EDUCATION) -- Coluna que será a chave estrangeira
REFERENCES TB_HR_EDUCATION (ID_EDUCATION);

CREATE TABLE TB_HR_TYPE_COUNT_SALARY(ID_TYPE_COUNT INT PRIMARY KEY NOT NULL,
								     CODE_TYPE_COUNT VARCHAR(2) NOT NULL,
									 NAME_TYPE_COUNT VARCHAR(30) NOT NULL);

INSERT INTO TB_HR_TYPE_COUNT_SALARY VALUES (1, 'CC', 'Conta Corrente'),
										   (2, 'CP', 'Conta Poupança'),
										   (3, 'CS', 'Conta Salario');


CREATE TABLE TB_HR_TYPE_HIRING(ID_TYPE_HIRING INT PRIMARY KEY NOT NULL,
							   DESC_HIRING VARCHAR(5) NOT NULL);

INSERT INTO TB_HR_TYPE_HIRING (ID_TYPE_HIRING, DESC_HIRING) VALUES (1, 'CLT'),
																   (2, 'PJ');

CREATE TABLE TB_HR_CIVIL_STATE(ID_CIVIL_STATE INT PRIMARY KEY NOT NULL,
							   DESC_CIVIL_STATE VARCHAR(30) NOT NULL);

INSERT INTO TB_HR_CIVIL_STATE (ID_CIVIL_STATE, DESC_CIVIL_STATE) VALUES (1, 'Casado'),
																		(2, 'Solteiro'),
																		(3, 'Viúvo(a)'),
																		(4, 'Divorciado(a)'),
																		(5, 'Outros');
SELECT * FROM TB_HR_CIVIL_STATE;

CREATE TABLE TB_HR_EMPLOYEES_HIRING (ID_EMP_X_HIR INT PRIMARY KEY NOT NULL,
									 ID_EMPLO INT NOT NULL,
									 DATE_HIRING DATE NOT NULL,
									 BORN_CITY VARCHAR(50) NOT NULL,
									 UF_ID_BORN INT NOT NULL,
									 NACIONALITY VARCHAR(50) NOT NULL,
									 NAME_MOTHER VARCHAR(50) NOT NULL,
									 NAME_FATHER VARCHAR(50),
									 ID_CIVIL_STATE INT NOT NULL,
									 ID_TYPE_HIRING INT not null,
									 SALARY DECIMAL (10,2) NOT NULL,
									 ID_BANK INT NOT NULL,
									 ID_TYPE_COUNT INT NOT NULL,
									 AGENCY INT NOT NULL,
									 COUNT_SALARY VARCHAR(20) UNIQUE NOT NULL,
									 CLT_NUMBER INT,
									 SERIE VARCHAR(20),
									 EMISSION_DATE_CLT DATE,
									 VOTER_REGISTRATION BIGINT,
									 ZONE_REGISTRATION INT,
									 SESSION_REGISTRATION INT,
									 NUMBER_RESERVIST INT,
									 SERIE_RESERVIST VARCHAR(5),
									 NUMBER_DRIVER_LICENSE BIGINT,
									 DATE_VALIDATE DATE,
									 TYPE_DRIVER VARCHAR(2),
									 EMISSION_DATE_DRIVER_LICENSE DATE,
									 USER_INSERT VARCHAR(50) NOT NULL,
									 DATE_INSERT DATETIME NOT NULL,
									 USER_UPDATE VARCHAR(50),
									 DATE_UPDATE DATETIME,
									 CONSTRAINT ID_EMPLO_FK FOREIGN KEY (ID_EMPLO) REFERENCES TB_HR_EMPLOYEES (ID_EMPLO),
									 CONSTRAINT ID_CIVIL_STATE_FK FOREIGN KEY (ID_CIVIL_STATE) REFERENCES TB_HR_CIVIL_STATE (ID_CIVIL_STATE),
									 CONSTRAINT UF_ID_BORN_FK FOREIGN KEY (UF_ID_BORN) REFERENCES TB_UF (ID_UF),
									 CONSTRAINT UF_ID_TP_COUNT_FK FOREIGN KEY (ID_TYPE_COUNT) REFERENCES TB_HR_TYPE_COUNT_SALARY (ID_TYPE_COUNT),
									 CONSTRAINT UF_ID_BANK_FK FOREIGN KEY (ID_BANK) REFERENCES TB_HR_BANK (ID_BANK),
									 CONSTRAINT ID_TYPE_HIRING_FK FOREIGN KEY (ID_TYPE_HIRING) REFERENCES TB_HR_TYPE_HIRING (ID_TYPE_HIRING));


CREATE SEQUENCE SEQ_HR_EMPLOYEES_HIRING START WITH 1 INCREMENT BY 1;


CREATE TABLE TB_HR_EMPLOYEES_X_VACATION (ID_EMPLO_X_VAC INT PRIMARY KEY NOT NULL,
										ID_EMPLO INT NOT NULL,
										DATE_START_VACATION DATE NOT NULL,
										DATE_FINISH_VACATION DATE NOT NULL,
										OBSERVATION VARCHAR(1000),
										USER_INSERT VARCHAR(50) NOT NULL,
										DATE_INSERT DATETIME NOT NULL,
										USER_UPDATE VARCHAR(50),
										DATE_UPDATE DATETIME,
										CONSTRAINT FK_ID_EMPLO FOREIGN KEY (ID_EMPLO) REFERENCES TB_HR_EMPLOYEES (ID_EMPLO));

CREATE SEQUENCE SEQ_HR_EMPLOYEES_X_VACATION START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_HR_EMPLOYEES_X_LICENSE (ID_EMPLO_X_LIC INT PRIMARY KEY NOT NULL,
										ID_EMPLO INT NOT NULL,
										DATE_START_LICENSE DATE NOT NULL,
										DATE_FINISH_LICENSE DATE NOT NULL,
										OBSERVATION VARCHAR(1000) NOT NULL,
										USER_INSERT VARCHAR(50) NOT NULL,
										DATE_INSERT DATETIME NOT NULL,
										USER_UPDATE VARCHAR(50),
										DATE_UPDATE DATETIME,
										CONSTRAINT FK_ID_EMPLO_LIC FOREIGN KEY (ID_EMPLO) REFERENCES TB_HR_EMPLOYEES (ID_EMPLO));

CREATE SEQUENCE SEQ_HR_EMPLOYEES_X_LICENSE START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_HR_EMPLOYEES_DEMISSION (ID_EMP_X_DEM INT PRIMARY KEY NOT NULL,
										ID_EMPLO INT NOT NULL,
										DATE_DEMISSION DATETIME NOT NULL,
										REASON VARCHAR(100) NOT NULL,
										OBSERVATIONS VARCHAR(1000) NOT NULL,
										USER_INSERT VARCHAR(50) NOT NULL,
										DATE_INSERT DATETIME NOT NULL,
										USER_UPDATE VARCHAR(50),
										DATE_UPDATE DATETIME,
										CONSTRAINT ID_EMP_FK FOREIGN KEY (ID_EMPLO) REFERENCES TB_HR_EMPLOYEES (ID_EMPLO));


CREATE SEQUENCE SEQ_HR_EMPLOYEES_DEMISSION START WITH 1 INCREMENT BY 1;

---------------------------- VEHICLE ---------------------------------------------------------------

CREATE TABLE TB_VH_MANUFACTURE (ID_MANUFACTURE INT PRIMARY KEY NOT NULL,
								NAME_MANUFACTURE VARCHAR(100));

CREATE SEQUENCE SEQ_VH_MANUFACTURE START WITH 10 INCREMENT BY 10;

CREATE TABLE TB_VH_VEHICLE(ID_VEHICLE INT PRIMARY KEY NOT NULL,
						   ID_MANUFACTURE INT NOT NULL,
						   NAME_MODEL VARCHAR(100) NOT NULL,
						   PLATE VARCHAR(15) UNIQUE NOT NULL,
						   CHASSI VARCHAR(200) UNIQUE,
						   RENAVAM VARCHAR(100) UNIQUE,
						   YEAR_MANUFACTURE INT NOT NULL,
						   KM INT,
						   USER_INSERT VARCHAR(50) NOT NULL,
						   DATE_INSERT DATETIME NOT NULL,
						   USER_UPDATE VARCHAR(50),
						   DATE_UPDATE DATETIME,
						   CONSTRAINT ID_MANUFACTURE_FK FOREIGN KEY (ID_MANUFACTURE) REFERENCES TB_VH_MANUFACTURE (ID_MANUFACTURE))

CREATE SEQUENCE SEQ_VH_VEHICLE START WITH 100 INCREMENT BY 1;

CREATE TABLE TB_VH_VEHICLE_X_CONSTRUCTION (ID_VEH_X_CONST INT PRIMARY KEY NOT NULL,
										   ID_VEHICLE INT NOT NULL,
										   NAME_CONSTRUCTION VARCHAR(50) NOT NULL,
										   VALUE_RENT DECIMAL(10,2) NOT NULL,
										   ZIP_CODE_CONSTR VARCHAR(15) NOT NULL,
										   ADDRESS_CONSTRUCTION VARCHAR(100) NOT NULL,
										   NUMBER_CONSTRUCTION VARCHAR(5) NOT NULL,
										   DISTRICT_CONSTRUCTION VARCHAR(100) NOT NULL,
										   CITY_CONSTRUCTION VARCHAR(100) NOT NULL,
										   UF_ID_CONSTR INT NOT NULL,
										   USER_INSERT VARCHAR(50) NOT NULL,
										   DATE_INSERT DATETIME NOT NULL,
										   USER_UPDATE VARCHAR(50),
										   DATE_UPDATE DATETIME,
										   CONSTRAINT FK_ID_VEHICLE FOREIGN KEY (ID_VEHICLE) REFERENCES TB_VH_VEHICLE (ID_VEHICLE),
										   CONSTRAINT FK_ID_UF FOREIGN KEY (UF_ID_CONSTR) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_VH_VEHICLE_X_CONSTRUCTION START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_VH_VEHICLE_X_MAINTENANCE (ID_VEH_X_MAINTENANCE INT PRIMARY KEY NOT NULL,
										  ID_VEHICLE INT NOT NULL,
										  SERVICE_MAINTENANCE VARCHAR(100) NOT NULL,
										  VALUE_MAINTENANCE DECIMAL(10,2) NOT NULL,
										  DATE_MAINTENANCE DATE NOT NULL,
										  LOCAL_MAINTENANCE VARCHAR(100) NOT NULL,
										  OBSERVATION VARCHAR(1000),
										  ZIP_CODE_MAINTENANCE VARCHAR(15),
										  ADDRESS_MAINTENANCE VARCHAR(100),
										  NUMBER_MAINTENANCE VARCHAR(5),
										  DISTRICT_MAINTENANCE VARCHAR(100),
										  CITY_MAINTENANCE VARCHAR(100),
										  UF_ID_MAINTENANCE INT NOT NULL,
										  USER_INSERT VARCHAR(50) NOT NULL,
										  DATE_INSERT DATETIME NOT NULL,
										  USER_UPDATE VARCHAR(50),
										  DATE_UPDATE DATETIME,
										  CONSTRAINT ID_VEH_FK FOREIGN KEY (ID_VEHICLE) REFERENCES TB_VH_VEHICLE (ID_VEHICLE),
										  CONSTRAINT FK_ID_UF_MAIN FOREIGN KEY (UF_ID_MAINTENANCE) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_VH_VEHICLE_X_MAINTENANCE START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_VH_VEHICLE_X_MAINTENANCE_HIS (ID_VEH_X_MAINTENANCE_HIS INT PRIMARY KEY NOT NULL,
											  ID_VEH_X_MAINTENANCE INT NOT NULL,
											  ID_VEHICLE INT NOT NULL,
											  SERVICE_MAINTENANCE VARCHAR(100) NOT NULL,
											  VALUE_MAINTENANCE DECIMAL(10,2) NOT NULL,
										      DATE_MAINTENANCE DATE NOT NULL,
											  LOCAL_MAINTENANCE VARCHAR(100) NOT NULL,
											  OBSERVATION VARCHAR(1000),
										      ZIP_CODE_MAINTENANCE VARCHAR(15),
										      ADDRESS_MAINTENANCE VARCHAR(100),
										      NUMBER_MAINTENANCE VARCHAR(5),
										      DISTRICT_MAINTENANCE VARCHAR(100),
										      CITY_MAINTENANCE VARCHAR(100),
										      UF_ID_MAINTENANCE INT NOT NULL,
										      USER_INSERT VARCHAR(50) NOT NULL,
										      DATE_INSERT DATETIME NOT NULL,
 										      USER_UPDATE VARCHAR(50),
										      DATE_UPDATE DATETIME,
										      CONSTRAINT ID_VEHI_FK FOREIGN KEY (ID_VEHICLE) REFERENCES TB_VH_VEHICLE (ID_VEHICLE),
											  CONSTRAINT ID_VEHI_X_MAIN_FK FOREIGN KEY (ID_VEH_X_MAINTENANCE) REFERENCES TB_VH_VEHICLE_X_MAINTENANCE (ID_VEH_X_MAINTENANCE),
										      CONSTRAINT FK_ID_UF_MAIN_HIS FOREIGN KEY (UF_ID_MAINTENANCE) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_VH_VEHICLE_X_MAINTENANCE_HIS START WITH 1 INCREMENT BY 1;


------------------------ MACHINE --------------------------------------

CREATE TABLE TB_MC_MANUFACTURE (ID_MANUFACTURE INT PRIMARY KEY NOT NULL,
								NAME_MANUFACTURE VARCHAR(100));

CREATE SEQUENCE SEQ_MC_MANUFACTURE START WITH 10 INCREMENT BY 10;


CREATE TABLE TB_MC_MACHINE(ID_MACHINE INT PRIMARY KEY NOT NULL,
						   ID_MANUFACTURE INT NOT NULL,
						   NAME_MODEL VARCHAR(100) NOT NULL,
						   YEAR_MANUFACTURE INT NOT NULL,
						   USER_INSERT VARCHAR(50) NOT NULL,
						   DATE_INSERT DATETIME NOT NULL,
						   USER_UPDATE VARCHAR(50),
						   DATE_UPDATE DATETIME,
						   CONSTRAINT ID_MANUFAC_FK FOREIGN KEY (ID_MANUFACTURE) REFERENCES TB_MC_MANUFACTURE (ID_MANUFACTURE));

CREATE SEQUENCE SEQ_MC_MACHINE START WITH 100 INCREMENT BY 1;

CREATE TABLE TB_MC_MACHINE_X_CONSTRUCTION (ID_MAC_X_CONST INT PRIMARY KEY NOT NULL,
										   ID_MACHINE INT NOT NULL,
										   NAME_CONSTRUCTION VARCHAR(50) NOT NULL,
										   VALUE_RENT DECIMAL(10,2) NOT NULL,
										   DAYS_RENT INT,
										   ZIP_CODE_CONSTR VARCHAR(15) NOT NULL,
										   ADDRESS_CONSTRUCTION VARCHAR(100) NOT NULL,
										   NUMBER_CONSTRUCTION VARCHAR(5) NOT NULL,
										   DISTRICT_CONSTRUCTION VARCHAR(100) NOT NULL,
										   CITY_CONSTRUCTION VARCHAR(100) NOT NULL,
										   UF_ID_CONSTR INT NOT NULL,
										   USER_INSERT VARCHAR(50) NOT NULL,
										   DATE_INSERT DATETIME NOT NULL,
										   USER_UPDATE VARCHAR(50),
										   DATE_UPDATE DATETIME,
										   CONSTRAINT FK_ID_MACHINE FOREIGN KEY (ID_MACHINE) REFERENCES TB_MC_MACHINE (ID_MACHINE),
										   CONSTRAINT ID_UF_FRK FOREIGN KEY (UF_ID_CONSTR) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_MC_MACHINE_X_CONSTRUCTION START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_MC_MACHINE_X_MAINTENANCE (ID_MAC_X_MAINTENANCE INT PRIMARY KEY NOT NULL,
										  ID_MACHINE INT NOT NULL,
										  SERVICE_MAINTENANCE VARCHAR(100) NOT NULL,
										  VALUE_MAINTENANCE DECIMAL(10,2) NOT NULL,
										  DATE_MAINTENANCE DATE NOT NULL,
										  LOCAL_MAINTENANCE VARCHAR(100) NOT NULL,
										  OBSERVATION VARCHAR(1000),
										  ZIP_CODE_MAINTENANCE VARCHAR(15),
										  ADDRESS_MAINTENANCE VARCHAR(100),
										  NUMBER_MAINTENANCE VARCHAR(5),
										  DISTRICT_MAINTENANCE VARCHAR(100),
										  CITY_MAINTENANCE VARCHAR(100),
										  UF_ID_MAINTENANCE INT NOT NULL,
										  USER_INSERT VARCHAR(50) NOT NULL,
										  DATE_INSERT DATETIME NOT NULL,
										  USER_UPDATE VARCHAR(50),
										  DATE_UPDATE DATETIME,
										  CONSTRAINT ID_MAC_FK FOREIGN KEY (ID_MACHINE) REFERENCES TB_MC_MACHINE (ID_MACHINE),
										  CONSTRAINT FK_ID_UF_MAIN_MAC FOREIGN KEY (UF_ID_MAINTENANCE) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_MC_MACHINE_X_MAINTENANCE START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_MC_MACHINE_X_MAINTENANCE_HIS (ID_MAC_X_MAINTENANCE_HIS INT PRIMARY KEY NOT NULL,
											  ID_MAC_X_MAINTENANCE INT NOT NULL,
											  ID_MACHINE INT NOT NULL,
											  SERVICE_MAINTENANCE VARCHAR(100) NOT NULL,
											  VALUE_MAINTENANCE DECIMAL(10,2) NOT NULL,
										      DATE_MAINTENANCE DATE NOT NULL,
											  LOCAL_MAINTENANCE VARCHAR(100) NOT NULL,
											  OBSERVATION VARCHAR(1000),
										      ZIP_CODE_MAINTENANCE VARCHAR(15),
										      ADDRESS_MAINTENANCE VARCHAR(100),
										      NUMBER_MAINTENANCE VARCHAR(5),
										      DISTRICT_MAINTENANCE VARCHAR(100),
										      CITY_MAINTENANCE VARCHAR(100),
										      UF_ID_MAINTENANCE INT NOT NULL,
										      USER_INSERT VARCHAR(50) NOT NULL,
										      DATE_INSERT DATETIME NOT NULL,
 										      USER_UPDATE VARCHAR(50),
										      DATE_UPDATE DATETIME,
										      CONSTRAINT ID_MA_FK FOREIGN KEY (ID_MACHINE) REFERENCES TB_MC_MACHINE (ID_MACHINE),
											  CONSTRAINT ID_MAC_X_MAIN_FK FOREIGN KEY (ID_MAC_X_MAINTENANCE_HIS) REFERENCES TB_MC_MACHINE_X_MAINTENANCE (ID_MAC_X_MAINTENANCE),
										      CONSTRAINT FK_ID_UF_MAC_MAIN_HIS FOREIGN KEY (UF_ID_MAINTENANCE) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_MC_MACHINE_X_MAINTENANCE_HIS START WITH 1 INCREMENT BY 1;

-------------------- Ferramentas -----------------------------------------------

CREATE TABLE TB_TO_TOOLS_STOCK (ID_TOOLS INT PRIMARY KEY NOT NULL,
								NAME_TOOLS VARCHAR(100) NOT NULL,
								QTY_TOOLS INT NOT NULL,
								QTY_STOCK INT NOT NULL,
								QTY_USED INT NOT NULL,
								USER_INSERT VARCHAR(50) NOT NULL,
								DATE_INSERT DATETIME NOT NULL,
 								USER_UPDATE VARCHAR(50),
								DATE_UPDATE DATETIME);
						 
CREATE SEQUENCE SEQ_TO_TOOLS START WITH 100 INCREMENT BY 1;

CREATE TABLE TB_TO_TYPE_LOAN (ID_TYPE_LOAN INT PRIMARY KEY NOT NULL,
							  DESC_TYPE_LOAN VARCHAR(30));

INSERT INTO TB_TO_TYPE_LOAN VALUES (1, 'Retirada'),
								   (2, 'Devolução');

CREATE TABLE TB_TO_TOOLS_LOAN (ID_TOOLS_LOAN INT PRIMARY KEY NOT NULL,
							   ID_TOOLS INT NOT NULL,
							   ID_TYPE_LOAN INT NOT NULL,
							   QTY INT NOT NULL,
							   NAME_REQUESTER VARCHAR(100) NOT NULL,
							   ID_DEPARTMENT INT NOT NULL,
							   OFFICE VARCHAR(100),
							   LOCALIZATION VARCHAR(100),
							   DATE_WITHDRAWAL DATE NOT NULL,
							   QTY_DAY_FOR_DEVOLUTION INT NOT NULL,
							   DATE_DEVOLUTION DATE,
							   USER_INSERT VARCHAR(50) NOT NULL,
							   DATE_INSERT DATETIME NOT NULL,
 							   USER_UPDATE VARCHAR(50),
							   DATE_UPDATE DATETIME,
							   CONSTRAINT FK_ID_DEPARTMENT FOREIGN KEY (ID_DEPARTMENT) REFERENCES TB_HR_DEPARTMENTS (ID_DEPARTMENT));

CREATE SEQUENCE SEQ_TO_TOOLS_LOAN START WITH 1 INCREMENT BY 1;
